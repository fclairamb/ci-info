name: Build docker images

on:
  push:
    branches: # At least when doing some tests
      - "**"
    tags:
      - "v*.*.*"
  # pull_request:

jobs:
  multi-registries:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare build info
        id: build-info
        run: |
          echo '{
            "version_input_git_tag": {
              "pattern": "^v?([0-9.]+)$"
            },
            "templates": [
              {
                "input_file": "build.go.tpl",
                "output_file": "build.go"
              }
            ]
          }' > .ci-info.json
          curl -L https://github.com/fclairamb/ci-info/releases/download/v0.3.0/ci-info_0.3.0_linux_amd64.tar.gz | tar -xz
          ./ci-info
      - name: Docker meta (scratch)
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v4
        with:
          images: fclairamb/ci-info
      - name: Docker meta (alpine)
        id: docker_meta_alpine
        uses: crazy-max/ghaction-docker-meta@v4
        with:
          images: fclairamb/ci-info
          flavor: |
            suffix=-alpine
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        if: github.repository == 'fclairamb/ci-info'
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        if: github.repository == 'fclairamb/ci-info'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push (scratch)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          push: ${{ github.repository == 'fclairamb/ci-info' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Build and push (alpine)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          push: ${{ github.repository == 'fclairamb/ci-info' }}
          tags: ${{ steps.docker_meta_alpine.outputs.tags }}
          labels: ${{ steps.docker_meta_alpine.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
